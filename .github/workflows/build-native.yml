name: Build Native Libraries

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'Native/libssh2/**'
      - '.github/workflows/build-native.yml'
      - '.github/docker/**'
      - '.github/scripts/**'

jobs:
  # build-linux-windows:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - platform: win-x64
  #           dockerfile_platform: linux/amd64
  #           target_triple: x86_64-w64-mingw32
  #         - platform: linux-x64
  #           dockerfile_platform: linux/amd64
  #           target_triple: x86_64-linux-gnu
  #         - platform: linux-arm64
  #           dockerfile_platform: linux/arm64
  #           target_triple: aarch64-linux-gnu
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build libssh2
  #       run: |
  #         chmod +x .github/scripts/build-native.sh
  #         .github/scripts/build-native.sh "${{ matrix.platform }}" "${{ matrix.target_triple }}" "${{ matrix.dockerfile_platform }}"

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: libssh2-${{ matrix.platform }}
  #         path: NullOpsDevs.LibSsh/runtimes/${{ matrix.platform }}/native/

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: osx-x64
          #   arch: x86_64
          - platform: osx-arm64
            arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build libssh2 for macOS
        run: |
          chmod +x .github/scripts/build-macos.sh
          .github/scripts/build-macos.sh "${{ matrix.platform }}" "${{ matrix.arch }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libssh2-${{ matrix.platform }}
          path: NullOpsDevs.LibSsh/runtimes/${{ matrix.platform }}/native/

  package:
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize native libraries
        run: |
          mkdir -p NullOpsDevs.LibSsh/runtimes

          # Copy all native libraries to the correct runtime folders
          for artifact in artifacts/libssh2-*; do
            platform=$(basename $artifact | sed 's/libssh2-//')
            echo "Processing $platform..."
            mkdir -p NullOpsDevs.LibSsh/runtimes/$platform/native
            cp -r $artifact/* NullOpsDevs.LibSsh/runtimes/$platform/native/ || true
          done

          # List what we have
          echo "Built native libraries:"
          find NullOpsDevs.LibSsh/runtimes -type f

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Build and Pack NuGet
        run: |
          dotnet build NullOpsDevs.LibSsh/NullOpsDevs.LibSsh.csproj -c Release
          dotnet pack NullOpsDevs.LibSsh/NullOpsDevs.LibSsh.csproj -c Release -o ./artifacts/nuget

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: artifacts/nuget/*.nupkg

      - name: Upload native libraries
        uses: actions/upload-artifact@v4
        with:
          name: native-libraries-all
          path: NullOpsDevs.LibSsh/runtimes/
